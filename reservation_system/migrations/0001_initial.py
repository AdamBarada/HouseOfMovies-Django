# Generated by Django 3.0 on 2021-06-03 15:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=40, unique=True)),
                ('firstName', models.CharField(blank=True, max_length=30)),
                ('lastName', models.CharField(blank=True, max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'categories',
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('director', models.CharField(max_length=100)),
                ('cast', models.CharField(max_length=255, null=True)),
                ('duration', models.IntegerField()),
                ('description', models.TextField(null=True)),
                ('image', models.TextField(null=True)),
                ('landscape', models.TextField(null=True)),
                ('trailer', models.CharField(max_length=255, null=True)),
                ('releaseDate', models.DateField()),
                ('categoriesId', models.ManyToManyField(to='reservation_system.Category')),
            ],
            options={
                'db_table': 'movies',
                'ordering': ['-releaseDate'],
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('time', models.TimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'reservations',
                'ordering': ['date', 'time'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('nbRows', models.IntegerField()),
                ('nbColumns', models.IntegerField()),
            ],
            options={
                'db_table': 'rooms',
            },
        ),
        migrations.CreateModel(
            name='Screening',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('movieId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reservation_system.Movie')),
                ('roomId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reservation_system.Room')),
            ],
            options={
                'db_table': 'screenings',
                'ordering': ['date', 'time'],
            },
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row', models.IntegerField()),
                ('number', models.IntegerField()),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reservation_system.Room')),
            ],
            options={
                'db_table': 'seats',
            },
        ),
        migrations.CreateModel(
            name='SeatReserved',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reservation_system.Reservation')),
                ('screening', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reservation_system.Screening')),
                ('seatId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reservation_system.Seat')),
            ],
            options={
                'verbose_name_plural': 'seats reserved',
                'db_table': 'seats_reserved',
            },
        ),
        migrations.AddField(
            model_name='reservation',
            name='screeningId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reservation_system.Screening'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
